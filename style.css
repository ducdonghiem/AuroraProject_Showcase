#courses {
    padding-left: 16px;
    width: 500px;
}

input {
    padding-left: 16px;
    height: 40px;
    border-radius: 4px;
    border-style: solid;
    border-color: #ddd;
}

table {
    border-collapse: collapse;
    width: 100%;
}

/* for mobile */
@media only screen and (max-width: 600px) {
    table {
        width: 500px; 
    }
}

th, td{
    border-left: 1px solid #ddd;
    border-right: 1px solid #ddd;
    /* padding: 8px; */
    text-align: center;
    height: 20px
}

th {
    background-color: #f2f2f2;
    border: 1px solid #ddd;
}

select {
    padding-left: 16px;
    height: 40px;
    border-radius: 4px;
    border-style: solid;
    border-color: #ddd;
}

.cell {
    position: relative;
    overflow: visible;
    white-space: nowrap;
    width: 80px;
    height: 20px;
}

.hour {
    position: absolute;
    top: 12px;
    left: 21px;
}

.noBorder {
    border: none;
}

.noBorderBottom {
    border-bottom: none;
}

.firebrick {
    background-color: firebrick;
    color: #FFFFFF;
}

.slateblue {
    background-color: slateblue;
    color: #FFFFFF;
}

.goldenrod {
    background-color: goldenrod;
    color: #FFFFFF;    
}

.limegreen {
    background-color: limegreen;
    color: #FFFFFF;
}

.darkgoldenrod {
    background-color: darkgoldenrod;
    color: #FFFFFF;
}

.mediumorchid {
    background-color: mediumorchid;
    color: #FFFFFF;
}

.darkkhaki {
    background-color: #BDB76B; 
    color: #FFFFFF;
}

.cornflowerblue {
    background-color: #6495ED;
    color: #FFFFFF;
}

.darksalmon {
    background-color: #E9967A;
    color: #FFFFFF;
}

.darkslategray {
    background-color: #2F4F4F;
    color: #FFFFFF;
}

#addCustomization {
    width: 170px;
}

#removeCustomization {
    width: 170px;
}

#loading1 {
    color: red;
    font-weight: bold;
}

#loading2 {
    color: red;
    font-weight: bold;
}

#error {
    color: red;
    font-weight: bold;
}

#error2 {
    color: red;
    font-weight: bold;
}


.navigatingButtons {
    display: flex;
}

#return1 {
    margin-right: auto; /* Pushes the return button to the left */
    width: 100px;
}

#retrieveCRNs {
    margin-left: auto; /* Pushes the return button to the right */
    width: 100px;
}

.buttonsNextPrev {
    display: flex;
    flex-grow: 1;
    justify-content: center;
    align-items: center; 
    gap: 5px; /* Space between the < and > buttons */
}

#prevSchedule1, #nextSchedule1 {
    width: 100px; 
}

button:hover {
    background-color: #d0d0d0; 
}

#submit {
    background-color: #28a745; 
    color: white; /* Text color */
    font-size: 18px; 
    font-weight: bold; 
    padding: 10px 20px; /* Larger padding to make the button bigger */
    border: none;       /* Remove border */
    border-radius: 5px; /* Rounded corners */
    cursor: pointer; /* Show pointer on hover */
    transition: background-color 0.3s ease; /* Smooth transition */
}

#submit:hover {
    background-color: #218838; /* Darker green on hover */
}

#done {
    background-color: #007bff;
    color: white;
    font-weight: bold;
    padding: 7px 15px; 
    border: none; 
    border-radius: 5px; 
    cursor: pointer; 
    transition: background-color 0.3s ease;
}

#done:hover {
    background-color: #0056b3;
}

.popup {
    position: absolute;
    padding: 10px;
    background-color: white;
    border: 1px solid #ccc;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    max-width: 200px;
}

/* Popup overlay */
.popup-overlay {
    display: none; /* Initially hidden */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Ensure the popup is above other content */
}

/* Popup content box */
.popup-content {
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    text-align: center;
    width: 300px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* Styling for buttons */
#okPopup {
    padding: 10px 15px;
    margin: 10px;
    cursor: pointer;
}


.isACourse {
    cursor: pointer;
}

.customeTime_container {
    display: flex;
    gap: 10px;
    align-items: center; /* Vertically align items */
    flex-wrap: wrap; /* Ensure wrapping if the screen is too small */
}
